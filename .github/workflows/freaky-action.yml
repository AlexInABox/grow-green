name: "Freaky Action"
on:
  workflow_dispatch:
      inputs:
        question:
          description: 'Alexx on top?'
          required: false
          default: 'YESSS'
          type: choice
          options:
            - 'YESSS'
            - 'nuUh!'

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: GrowGreen

jobs:
  build-windows:
    name: Build Windows
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:mono-4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true # large file storage
      
      - name: .NET installation
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Setup Godot Templates
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono

      - name: Windows Build
        run: |
          mkdir -v -p builds/windows
          godot --headless --verbose --export-release "Windows Desktop" builds/windows/${{ env.EXPORT_NAME }}.exe

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: builds/windows/${{ env.EXPORT_NAME }}.exe

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:mono-4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true # large file storage
      
      - name: .NET installation
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Setup Godot Templates
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono

      - name: Linux Build
        run: |
          mkdir -v -p builds/linux
          godot --headless --verbose --export-release "Linux" builds/linux/${{ env.EXPORT_NAME }}_linux.x86_64

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: builds/linux/${{ env.EXPORT_NAME }}_linux.x86_64

  build-mac:
    name: Build MacOS
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:mono-4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true # large file storage
      
      - name: .NET installation
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Setup Godot Templates
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono

      - name: MacOS Build
        run: |
          mkdir -v -p builds/mac
          godot --headless --verbose --export-release "macOS" builds/mac/${{ env.EXPORT_NAME }}.zip

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac
          path: builds/mac/${{ env.EXPORT_NAME }}.zip

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [ build-windows, build-linux, build-mac ]
    permissions: write-all
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          path: builds

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: |
            builds/windows/${{ env.EXPORT_NAME }}.exe
            builds/linux/${{ env.EXPORT_NAME }}.x86_64
            builds/mac/${{ env.EXPORT_NAME }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}